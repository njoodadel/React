{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\njood adel\\\\Desktop\\\\coding\\\\React\\\\volunteer-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactFullpage from '../../../components'; // import Styles from './styles.css';\n\nconst SEL = 'custom-section';\nconst SECTION_SEL = `.${SEL}`; // NOTE: if using fullpage extensions/plugins put them here and pass it as props.\n// This is no longer required for the scrollOverflow option.\n\nconst pluginWrapper = () => {\n  /*\n  * require('./fullpage.fadingEffect.min'); // Optional. Required when using the \"fadingEffect\" extension.\n  */\n};\n\nconst originalColors = ['#ff5f45', '#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionsColor: [...originalColors],\n      fullpages: [{\n        text: 'Section 1'\n      }, {\n        text: 'Section 2'\n      }, {\n        text: 'Section 3'\n      }]\n    };\n  }\n\n  onLeave(origin, destination, direction) {\n    console.log('onLeave', {\n      origin,\n      destination,\n      direction\n    }); // arguments are mapped in order of fullpage.js callback arguments do something\n    // with the event\n  }\n\n  handleChangeColors() {\n    const newColors = this.state.sectionsColor[0] === 'yellow' ? [...originalColors] : ['yellow', 'blue', 'white'];\n    this.setState({\n      sectionsColor: newColors\n    });\n  }\n\n  handleAddSection() {\n    this.setState(state => {\n      const {\n        fullpages\n      } = state;\n      const {\n        length\n      } = fullpages;\n      fullpages.push({\n        text: `section ${length + 1}`,\n        id: Math.random()\n      });\n      return {\n        fullpages: [...fullpages]\n      };\n    });\n  }\n\n  handleRemoveSection() {\n    this.setState(state => {\n      const {\n        fullpages\n      } = state;\n      const newPages = [...fullpages];\n      newPages.pop();\n      return {\n        fullpages: newPages\n      };\n    });\n  }\n\n  moveSectionDown() {\n    fullpage_api.moveSectionDown();\n  }\n\n  render() {\n    const {\n      fullpages\n    } = this.state;\n\n    if (!fullpages.length) {\n      return null;\n    }\n\n    const Menu = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu\",\n      style: {\n        position: 'fixed',\n        top: 0,\n        zIndex: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      class: \"actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleAddSection(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Add Section\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleRemoveSection(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Remove Section\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleChangeColors(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Change background colors\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.moveSectionDown(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Move Section Down\"))));\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ReactFullpage, {\n      debug: true\n      /* Debug logging */\n      // Required when using extensions\n      ,\n      pluginWrapper: pluginWrapper // fullpage options\n      ,\n      licenseKey: 'YOUR_KEY_HERE' // Get one from https://alvarotrigo.com/fullPage/pricing/\n      ,\n      navigation: true,\n      anchors: ['firstPage', 'secondPage', 'thirdPage'],\n      sectionSelector: SECTION_SEL,\n      onLeave: this.onLeave.bind(this),\n      sectionsColor: this.state.sectionsColor,\n      render: comp => /*#__PURE__*/React.createElement(ReactFullpage.Wrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, fullpages.map(({\n        text\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        key: text,\n        className: SEL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, text)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst rootElement = document.getElementById('react-root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/njood adel/Desktop/coding/React/volunteer-app/src/App.js"],"names":["React","ReactDOM","ReactFullpage","SEL","SECTION_SEL","pluginWrapper","originalColors","App","Component","constructor","props","state","sectionsColor","fullpages","text","onLeave","origin","destination","direction","console","log","handleChangeColors","newColors","setState","handleAddSection","length","push","id","Math","random","handleRemoveSection","newPages","pop","moveSectionDown","fullpage_api","render","Menu","position","top","zIndex","bind","comp","map","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactFullpage from '../../../components';\n// import Styles from './styles.css';\n\nconst SEL = 'custom-section';\nconst SECTION_SEL = `.${SEL}`;\n\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props.\n// This is no longer required for the scrollOverflow option.\nconst pluginWrapper = () => {\n  /*\n  * require('./fullpage.fadingEffect.min'); // Optional. Required when using the \"fadingEffect\" extension.\n  */\n};\n\nconst originalColors = ['#ff5f45', '#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionsColor: [...originalColors],\n      fullpages: [\n        {\n          text: 'Section 1',\n        },\n        {\n          text: 'Section 2',\n        },\n        {\n          text: 'Section 3',\n        }\n      ],\n    };\n  }\n\n  onLeave(origin, destination, direction) {\n    console.log('onLeave', { origin, destination, direction });\n    // arguments are mapped in order of fullpage.js callback arguments do something\n    // with the event\n  }\n\n  handleChangeColors() {\n    const newColors =\n      this.state.sectionsColor[0] === 'yellow'\n        ? [...originalColors]\n        : ['yellow', 'blue', 'white'];\n    this.setState({\n      sectionsColor: newColors,\n    });\n  }\n\n  handleAddSection() {\n    this.setState(state => {\n      const { fullpages } = state;\n      const { length } = fullpages;\n      fullpages.push({\n        text: `section ${length + 1}`,\n        id: Math.random(),\n      });\n\n      return {\n        fullpages: [...fullpages],\n      };\n    });\n  }\n\n  handleRemoveSection() {\n    this.setState(state => {\n      const { fullpages } = state;\n      const newPages = [...fullpages];\n      newPages.pop();\n\n      return { fullpages: newPages };\n    });\n  }\n\n  moveSectionDown() {\n    fullpage_api.moveSectionDown();\n  }\n\n  render() {\n    const { fullpages } = this.state;\n\n    if (!fullpages.length) {\n      return null;\n    }\n\n    const Menu = () => (\n      <div\n        className=\"menu\"\n        style={{\n          position: 'fixed',\n          top: 0,\n          zIndex: 100,\n        }}\n      >\n        <ul class=\"actions\">\n          <li>\n            <button onClick={() => this.handleAddSection()}>Add Section</button>\n            <button onClick={() => this.handleRemoveSection()}>\n              Remove Section\n            </button>\n            <button onClick={() => this.handleChangeColors()}>\n              Change background colors\n            </button>\n            <button onClick={() => this.moveSectionDown()}>\n              Move Section Down\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n\n    return (\n      <div className=\"App\">\n        <Menu />\n        <ReactFullpage\n          debug /* Debug logging */\n\n          // Required when using extensions\n          pluginWrapper={pluginWrapper}\n\n          // fullpage options\n          licenseKey={'YOUR_KEY_HERE'} // Get one from https://alvarotrigo.com/fullPage/pricing/\n          navigation\n          anchors={['firstPage', 'secondPage', 'thirdPage']}\n          sectionSelector={SECTION_SEL}\n          onLeave={this.onLeave.bind(this)}\n          sectionsColor={this.state.sectionsColor}\n\n          render={comp => (\n            <ReactFullpage.Wrapper>\n              {fullpages.map(({ text }) => (\n                <div key={text} className={SEL}>\n                  <h1>{text}</h1>\n                </div>\n              ))}\n            </ReactFullpage.Wrapper>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById('react-root');\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}